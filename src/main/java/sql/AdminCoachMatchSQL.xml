<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="zipcok.admin">
  <!-- 코치 정보 관리 시작-->
  	<select id="cTotalCnt" parameterType="HashMap" resultType="Integer">
  	select count(*) from (select * from
    zipcok_member
  	where
     <choose>
	  	<when test="selectoption=='전체'">
	  		<choose>
		  		<when test="searchText==''">mem_id like '%%' and</when>
		  		<when test="searchText!=''">mem_id like '%${searchText}%' and</when>
		  	</choose>
	  	</when>
	  	<when test="selectoption=='번호'">
		  	<choose>
		  		<when test="searchText==''">mem_idx<![CDATA[>]]>0 and</when>
		  		<when test="searchText!=''">mem_idx like '%${searchText}' and</when>
		  	</choose>
	  	</when>
	  	<when test="selectoption=='id'">
	  		<choose>
		  		<when test="searchText==''">mem_id like '%%' and</when>
		  		<when test="searchText!=''">mem_id like '%${searchText}%' and</when>
		  	</choose>
  		</when>
	  	<when test="selectoption=='이름'">
	  		<choose>
		  		<when test="searchText==''">mem_name like '%%' and</when>
		  		<when test="searchText!=''">mem_name like '%${searchText}%' and</when>
		  	</choose>
	  	</when>
  	</choose>
  	 
  	<choose>
	  	<when test="mem_gender==''">mem_gender like '%%' and</when>
	  	<when test="mem_gender!=''">mem_gender=#{mem_gender} and</when>
  	</choose>
     mem_type='코치회원'
     )a
  	</select>
  
  <select id="findRequestByPd_idx" parameterType="Integer" resultType="zipcok.coach.model.RequestFormDTO">
  select rf.* from
(select pr.* from
(select * from zipcok_payment_details
where 
pd_idx = 50)a,payment_request pr
where
pd_req_idx = pr_idx)b,request_form rf
where
pr_req_idx = rf.req_idx
  </select>
  
  
  	<select id="adminSearchCoach" parameterType="HashMap" resultType="zipcok.member.model.MemberAllDTO">	    
  	select * from
    (select rownum as rnum,a.* from
    (select * from zipcok_member
     where
  	<choose>
	  	<when test="selectoption=='전체'">
	  		<choose>
		  		<when test="searchText==''">mem_id like '%%' and</when>
		  		<when test="searchText!=''">mem_id like '%${searchText}%' and</when>
		  	</choose>
	  	</when>
	  	<when test="selectoption=='번호'">
		  	<choose>
		  		<when test="searchText==''">mem_idx<![CDATA[>]]>0 and</when>
		  		<when test="searchText!=''">mem_idx like '%${searchText}' and</when>
		  	</choose>
	  	</when>
	  	<when test="selectoption=='id'">
	  		<choose>
		  		<when test="searchText==''">mem_id like '%%' and</when>
		  		<when test="searchText!=''">mem_id like '%${searchText}%' and</when>
		  	</choose>
  		</when>
	  	<when test="selectoption=='이름'">
	  		<choose>
		  		<when test="searchText==''">mem_name like '%%' and</when>
		  		<when test="searchText!=''">mem_name like '%${searchText}%' and</when>
		  	</choose>
	  	</when>
  	</choose>
  	 
  	<choose>
	  	<when test="mem_gender==''">mem_gender like '%%' and</when>
	  	<when test="mem_gender!=''">mem_gender=#{mem_gender} and</when>
  	</choose>
	  	mem_type='코치회원'
	  	order by mem_idx
	  	)a)b
	  	where
	  	rnum between #{start} and #{end}
  	</select>
  	
  	<select id="adminCoachProfile" parameterType="String" resultType="zipcok.coach.model.CoachDTO">
  		select * from 
  		coach_regist
  		where
  		coach_mem_id = #{coach_mem_id}
  	</select>
  	<select id="adminToCharDate" parameterType="String" resultType="zipcok.admin.model.PyoAdDTO">
  		select to_char(coach_joindate,'yyyy-mm-dd') as joindate, to_char(coach_change,'yyyy-mm-dd') as change 
  		from 
  		coach_regist
  		 where
  		  coach_mem_id = #{value}
  	</select>
  	<!-- 코치이름 가져오기 -->
  	<select id="adminCoachNameCall" parameterType="String" resultType="zipcok.member.model.MemberAllDTO">
  		select * from zipcok_member
  		where
  		mem_id=#{value}
  	</select>
  	<!-- 코치이름 가져오기 -->
  	<update id="adminCoachIntroUpdate" parameterType="HashMap">
  		update coach_regist set
  		coach_intro_sub=#{coach_intro_sub},
  		coach_intro_cont=#{coach_intro_cont}
  		where
  		coach_mem_id = #{coach_mem_id}
  	</update>
  	<update id="adminCoachMatUpdate" parameterType="HashMap">
  		update coach_regist set
  		coach_mat=#{coach_mat}
  		where
  		coach_mem_id = #{coach_mem_id}
  	</update>
  	<update id="adminCoachExtypeUpdate" parameterType="HashMap">
  		update coach_regist set
  		coach_ex_type=#{coach_ex_type}
  		where
  		coach_mem_id = #{coach_mem_id}
  	</update>
  	<update id="adminCoachYearUpdate" parameterType="HashMap">
  		update coach_regist set
  		coach_year=#{coach_year}
  		where
  		coach_mem_id = #{coach_mem_id}
  	</update>
  	<update id="adminCoachFlocUpdate" parameterType="HashMap">
  		update coach_regist set
  		coach_floc=#{coach_floc},
  		coach_sloc=#{coach_sloc}
  		where
  		coach_mem_id = #{coach_mem_id}
  	</update>
  	<!-- 코치 정보 관리 끝-->
  	<!-- 코치매칭관리 시작 -->
  	<select id="ajaxCmTotalCnt" parameterType="HashMap" resultType="Integer">
  		select  count(*) from
		(select * from
		request_form,zipcok_member
		where 
		req_receive_id
		<if test="req_receive_id == '전체'">
		like '%%'
		</if>
		<if test="req_receive_id != '전체'">
		 = #{req_receive_id}
		</if>
		and
		req_mem_id =mem_id)a
  	</select>
  	<select id="reqFormMemberData" parameterType="HashMap" resultType="zipcok.admin.model.ReqFormMemberDTO">
  		select * from
		(select rownum as rnum, a.* from
		(select * from
		request_form,zipcok_member
			where 
		req_receive_id
		<if test="req_receive_id == '전체'">
		like '%%'
		</if>
		<if test="req_receive_id != '전체'">
		 = #{req_receive_id}
		</if>
		and
		req_mem_id =mem_id)a)b
		where
		rnum between #{start} and #{end}
  	</select>
  	
  	<!-- 코치매칭관리 끝 -->
  	<!-- 취소 환불 관리 시작-->
  	<select id="canTotalCnt" parameterType="HashMap" resultType="Integer">
  		select count(*) 
  		from
  		zipcok_payment_details
  		where
  		pd_key='코치'
  		<choose>
	  		<when test="cancelSelect=='전체'"></when>
	  		<when test="cancelSelect=='취소요청중'">and pd_status=#{cancelSelect}</when>
	  		<when test="cancelSelect=='결제취소완료'">and pd_status=#{cancelSelect}</when>
	  		<when test="cancelSelect=='결제완료'">and pd_status=#{cancelSelect}</when>
  		</choose>
  	</select>
  	<select id="adminCoachCancelAllList" parameterType="HashMap" resultType="zipcok.admin.model.AdminPaymentDetailsDTO">
  		select * from (select rownum as rnum,a.* from (select * from zipcok_payment_details
  		where
  		pd_key='코치'
  		<choose>
	  		<when test="cancelSelect=='전체'"></when>
	  		<when test="cancelSelect=='취소요청중'">and pd_status=#{cancelSelect}</when>
	  		<when test="cancelSelect=='결제취소완료'">and pd_status=#{cancelSelect}</when>
	  		<when test="cancelSelect=='결제완료'">and pd_status=#{cancelSelect}</when>
  		</choose>
  		order by pd_idx)a)b
  		where
	  	rnum between #{start} and #{end}
  	</select>

  	<select id="canSearchTotalCnt" parameterType="HashMap" resultType="Integer">
  		select count(*) from (select * from zipcok_payment_details
  		where
  		pd_key='코치'
  		<choose>
		  	<when test="searchCon=='코치아이디'">
		  		<choose>
			  		<when test="searchT==''">and pd_target_id like '%%'</when>
			  		<when test="searchT!=''">and pd_target_id like '%${searchT}%'</when>
		  		</choose>
		  	</when>
		  	<when test="searchCon=='회원아이디'">
		  		<choose>
			  		<when test="searchT==''">and pd_mem_id like '%%'</when>
			  		<when test="searchT!=''">and pd_mem_id like '%${searchT}%'</when>
		  		</choose>
		  	</when>
     	</choose>
     	)a
  	</select>
  	
  	
  	<select id="adminCoachCancleSearchPd" parameterType="HashMap" resultType="zipcok.admin.model.AdminPaymentDetailsDTO">
  		select * from (select rownum as rnum,a.* from(select * from zipcok_payment_details
  		where
  		pd_key='코치'
  		<choose>
		  	<when test="searchCon=='코치아이디'">
		  		<choose>
			  		<when test="searchT==''">and pd_target_id like '%%'</when>
			  		<when test="searchT!=''">and pd_target_id like '%${searchT}%'</when>
		  		</choose>
		  	</when>
		  	<when test="searchCon=='회원아이디'">
		  		<choose>
			  		<when test="searchT==''">and pd_mem_id like '%%'</when>
			  		<when test="searchT!=''">and pd_mem_id like '%${searchT}%'</when>
		  		</choose>
		  	</when>
     	</choose>
     	order by pd_idx)a)b
  		where
	  	rnum between #{start} and #{end}
  	</select>
  	
  	<update id="updateStatus" parameterType="Integer">
  		update zipcok_payment_details
  		set
  		pd_status='결제취소완료'
  		where
  		pd_idx=#{pd_idx}
  	</update>
  	
  	<update id="updateStatusToCanclePlz" parameterType="Integer">
  		update zipcok_payment_details
  		set
  		pd_status='취소요청중'
  		where
  		pd_idx=#{pd_idx}
  	</update>
  	<!-- 취소 환불 관리 끝-->
  </mapper>