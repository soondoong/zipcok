<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="zipcok.chat">
 
<insert id = "createRoom" parameterType="zipcok.chat.model.ChatRoomDTO">
insert into  
chatroom
values (
chatroom_idx.nextval ,
#{ croom_userid},
#{croom_coachid}, 
#{croom_req_idx},
sysdate
)

</insert>


<insert id = "insertMessage" parameterType="zipcok.chat.model.MessageDTO">
insert into  
message
values (
message_idx.nextval ,
#{msg_croom_idx},
#{msg_req_idx},
#{msg_sender}, 
#{msg_receiver},
#{msg_content},
#{msg_sendtime},
#{msg_readtime},
#{msg_userid},
#{msg_coachid}, 
#{msg_file_upload},
#{msg_file_path},
#{user_name},
#{receiver_user_name},
#{unReadCount},
#{msg_type}
)
</insert>


<select id ="getRecentMessage"  resultType = "zipcok.chat.model.MessageDTO">

select 
a.*
from
(select *
from message
where
msg_croom_idx = #{croom_idx}
order by msg_sendtime desc)a
where 
rownum = 1
</select>

<select id="getMessageList" resultType="zipcok.chat.model.MessageDTO">
select * from 
message
where 
msg_croom_idx =  #{croom_idx}
order by msg_sendtime asc

</select>

<update id="updateUnreadcount">
update message
set 
unreadcount = 0
where 
msg_croom_idx = #{croom_idx}
</update>


<select id ="isRoom" parameterType="zipcok.chat.model.ChatRoomDTO" resultType = "zipcok.chat.model.ChatRoomDTO">

select * from 
chatroom
WHERE croom_userid = #{croom_userid} 
and 
croom_coachid = #{croom_coachid} 
and
croom_req_idx = #{croom_req_idx} 
</select>


<select id ="findRoomInfo"  resultType = "zipcok.chat.model.ChatRoomDTO">

select * from 
chatroom
WHERE
croom_req_idx = #{croom_req_idx} 
</select>



<select id ="nomalChatRoomListSQL" parameterType="String" resultType = "zipcok.chat.model.ChatRoomListDTO">

select room.*,mem_name,mfile_upload
from
(select * from
 chatroom 
 where 
 croom_userid = #{id} )room,member_file mf,zipcok_member zm
 where
croom_coachid = mf.mfile_mem_id
and
mf.mfile_key = '회원프로필'
and
croom_coachid = zm.mem_id
order by croom_req_idx desc
</select>


<select id ="coachChatRoomListSQL" parameterType="String" resultType = "zipcok.chat.model.ChatRoomListDTO">

select room.*,mem_name,mfile_upload
from
(select * from
 chatroom 
 where 
 croom_coachid = #{id} )room,member_file mf,zipcok_member zm
 where
croom_userid = mf.mfile_mem_id
and
mf.mfile_key = '회원프로필'
and
croom_userid = zm.mem_id
order by croom_req_idx desc
</select>


<delete id="roomDelete">
delete chatroom
where 
croom_idx = #{croom_idx}
</delete>

<delete id="msgDelete">
delete message
where 
msg_croom_idx = #{croom_idx}
</delete>


<insert id="paymentReqInsert" parameterType="zipcok.cpayment.model.Payment_RequestDTO">
insert into payment_request
values(
payment_request_idx.nextval,
#{pr_msg_idx},
#{pr_req_idx},
#{pr_price},
#{pr_start},
#{pr_end},
#{pr_content},
sysdate,
'상담중',
#{pr_sender},
#{pr_receiver}
)

</insert>

<select id="RecentPrMsgIdx" parameterType="HashMap" resultType="Integer">
select * from
(select msg_idx
from message
where
msg_type = #{msg_type}
and
msg_croom_idx = #{croom_idx}
order by msg_sendtime desc)
where
rownum = 1
</select>

<select id="findOnePaymentRequest" parameterType="zipcok.cpayment.model.Payment_RequestDTO" resultType="zipcok.cpayment.model.Payment_RequestDTO">
	select * from 
	payment_request
	where
	pr_msg_idx = #{pr_msg_idx}
	and
	pr_req_idx = #{pr_req_idx}
</select>

<select id="isPaymentCount" parameterType="zipcok.cpayment.model.Payment_RequestDTO" resultType="zipcok.cpayment.model.Payment_RequestDTO" >
select *
from payment_request
where
pr_msg_idx = #{pr_msg_idx}
and
pr_req_idx =  #{pr_req_idx}
</select>

<delete id="deletePaymentrequest" parameterType="zipcok.cpayment.model.Payment_RequestDTO">
delete from payment_request
where
pr_msg_idx = #{pr_msg_idx}
and
pr_req_idx =  #{pr_req_idx}
and
pr_status = '상담중'
</delete>

<update id="paymentRequestStatusChange" parameterType="HashMap">
update payment_request
set
pr_status = '결제완료'
where
pr_idx = #{pr_idx}

</update>

<insert id="paymentOKListAdd" parameterType="zipcok.homegym.model.Payment_detailsDTO" >
		insert into zipcok_payment_details values(
		zipcok_payment_details_pd_idx.nextval,
		#{pd_req_idx},
		#{pd_key},
		#{pd_code},
		#{pd_target_id},
		#{pd_mem_id},
		#{pd_method},
		sysdate,
		'결제완료',
		#{pd_price}
		)
</insert>			
  </mapper>