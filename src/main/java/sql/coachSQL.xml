<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="zipcok.coach">
    <select id="findCategoryCoach" parameterType="String" resultType="zipcok.coach.model.MainCoachDTO">
select 
m.mem_name,f.mfile_upload,a.*  
from zipcok_member m,member_file f, 
(select * from coach_regist c,coach_category g 
where c.coach_mem_id = g.cate_mem_id)a
where 
m.mem_id=a.coach_mem_id 
and
m.mem_id=mfile_mem_id
and
mfile_key='회원프로필' 
and 
a.cate_name=#{category} 
	</select>
	
	
	
	<select id="findCategories" parameterType="String" resultType="zipcok.coach.model.CategoryDTO">
	select * from
	coach_category
	where
	cate_mem_id= #{id}
	
	</select>
	
	
	<select id="searchCoachByKey" parameterType="HashMap" resultType="zipcok.coach.model.MainCoachDTO">
	
select
 * from 
 (select rownum as rnum,zm.mem_name,
cr.*,mf.mfile_upload,b.avg
from
(select rev_target_id,trunc(avg(rev_star),1) as avg
from
(select c.coach_mem_id
from coach_regist c,coach_category g
where 
c.coach_mem_id = g.cate_mem_id
and
c.coach_floc
<choose>
        <when test="location == '전체지역'">like '%%'</when>
        <when test="location != '전체지역'">like '%${location}%' </when>
</choose>
and
c.coach_ex_type
<choose>
        <when test="extype == '전체'">like '%%'</when>
        <when test="extype != '전체'"> = '${extype}'</when>
</choose> 
and
cate_name
<choose>
        <when test="category == '모든카테고리'">like '%%'</when>
        <when test="category != '모든카테고리'">like '%${category}%' </when>
</choose>
group by c.coach_mem_id)a,star_review
where a.coach_mem_id = rev_target_id 
group by
rev_target_id)b, coach_regist cr,member_file mf,zipcok_member zm
where
b.rev_target_id = cr.coach_mem_id
and
b.rev_target_id = mf.mfile_mem_id
and
b.rev_target_id = zm.mem_id
and
mf.mfile_key='회원프로필'

)c

where 
rnum <![CDATA[>=]]> #{start} and rnum <![CDATA[<=]]> #{end}
	
	
</select>



	<select id="ajaxSearchCoachByKey" parameterType="HashMap" resultType="zipcok.coach.model.MainCoachDTO">
	
select
 * from 
 (select rownum as rnum,zm.mem_name,
cr.*,mf.mfile_upload,b.avg
from
(select rev_target_id,trunc(avg(rev_star),1) as avg
from
(select c.coach_mem_id
from coach_regist c,coach_category g
where 
c.coach_mem_id = g.cate_mem_id
and
c.coach_floc
<choose>
        <when test="location == '전체지역'">like '%%'</when>
        <when test="location != '전체지역'">like '%${location}%' </when>
</choose>
and
c.coach_ex_type
<choose>
        <when test="extype == '전체'">like '%%'</when>
        <when test="extype != '전체'"> = '${extype}'</when>
</choose> 
and
cate_name
<choose>
        <when test="category == '모든카테고리'">like '%%'</when>
        <when test="category != '모든카테고리'">like '%${category}%' </when>
</choose>
group by c.coach_mem_id)a,star_review
where a.coach_mem_id = rev_target_id 
group by
rev_target_id)b, coach_regist cr,member_file mf,zipcok_member zm
where
b.rev_target_id = cr.coach_mem_id
and
b.rev_target_id = mf.mfile_mem_id
and
b.rev_target_id = zm.mem_id
and
mf.mfile_key='회원프로필'

and
zm.mem_gender
<choose>
        <when test="gender == '전체'">like '%%'</when>
        <when test="gender != '전체'"> like '${gender}%' </when>
</choose>
)c

where 
c.avg <![CDATA[>=]]> #{starValue}
and
rnum <![CDATA[>=]]> #{start} and rnum <![CDATA[<=]]> #{end}
	
	
</select>
	
	
<select id="totalCnt" parameterType="Hashmap" resultType="Integer">

select
 count(*) from 
 (select rownum as rnum,zm.mem_name,
cr.*,mf.mfile_upload,b.avg
from
(select rev_target_id,trunc(avg(rev_star),1) as avg
from
(select c.coach_mem_id
from coach_regist c,coach_category g
where 
c.coach_mem_id = g.cate_mem_id
and
c.coach_floc
<choose>
        <when test="location == '전체지역'">like '%%'</when>
        <when test="location != '전체지역'">like '%${location}%' </when>
</choose>
and
c.coach_ex_type
<choose>
        <when test="extype == '전체'">like '%%'</when>
        <when test="extype != '전체'"> = '${extype}'</when>
</choose> 
and
cate_name
<choose>
        <when test="category == '모든카테고리'">like '%%'</when>
        <when test="category != '모든카테고리'">like '%${category}%' </when>
</choose>
group by c.coach_mem_id)a,star_review
where a.coach_mem_id = rev_target_id 
group by
rev_target_id)b, coach_regist cr,member_file mf,zipcok_member zm
where
b.rev_target_id = cr.coach_mem_id
and
b.rev_target_id = mf.mfile_mem_id
and
b.rev_target_id = zm.mem_id
and
mf.mfile_key='회원프로필'
)c


</select>	
	
	
	
	
<select id="ajaxTotalCnt" parameterType="Hashmap" resultType="Integer">

select
 count(*) from 
 (select rownum as rnum,zm.mem_name,
cr.*,mf.mfile_upload,b.avg
from
(select rev_target_id,trunc(avg(rev_star),1) as avg
from
(select c.coach_mem_id
from coach_regist c,coach_category g
where 
c.coach_mem_id = g.cate_mem_id
and
c.coach_floc
<choose>
        <when test="location == '전체지역'">like '%%'</when>
        <when test="location != '전체지역'">like '%${location}%' </when>
</choose>
and
c.coach_ex_type
<choose>
        <when test="extype == '전체'">like '%%'</when>
        <when test="extype != '전체'"> = '${extype}'</when>
</choose> 
and
cate_name
<choose>
        <when test="category == '모든카테고리'">like '%%'</when>
        <when test="category != '모든카테고리'">like '%${category}%' </when>
</choose>
group by c.coach_mem_id)a,star_review
where a.coach_mem_id = rev_target_id 
group by
rev_target_id)b, coach_regist cr,member_file mf,zipcok_member zm
where
b.rev_target_id = cr.coach_mem_id
and
b.rev_target_id = mf.mfile_mem_id
and
b.rev_target_id = zm.mem_id
and
mf.mfile_key='회원프로필'

and
zm.mem_gender
<choose>
        <when test="gender == '전체'">like '%%'</when>
        <when test="gender != '전체'"> like '${gender}%' </when>
</choose>

)c

where 
c.avg <![CDATA[>=]]> #{starValue}


</select>


<insert id="coachRegist" parameterType="zipcok.coach.model.MainCoachDTO">
insert into 
coach_regist
values(
#{coach_mem_id},
#{coach_intro_sub},
#{coach_intro_cont},
#{coach_year},
#{coach_floc},
#{coach_sloc},
#{coach_ex_type},
'없음',
sysdate,
sysdate
)

</insert>

<insert id="insertCategory" parameterType="zipcok.coach.model.CategoryDTO">
insert into 
 coach_category
values(
coach_category_cate_idx.nextval,
#{cate_mem_id},
#{cate_name}
)

</insert>

<insert id="insertCoachInfoFile" parameterType="zipcok.coach.model.CoachFileDTO">
insert into 
 member_file
values(
member_file_mfile_idx.nextval,
#{mfile_key},
#{mfile_mem_id},
#{mfile_upload},
#{mfile_size},
#{mfile_orig},
#{mfile_path},
#{mfile_type}
)

</insert>


<update id="memberTypeUpdate" parameterType="zipcok.coach.model.MainCoachDTO">
update 
zipcok_member
set 
mem_type = '코치회원'
where
mem_id=#{coach_mem_id} 

</update>
 </mapper>